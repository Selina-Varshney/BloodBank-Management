-- BLOOD BANK MANAGEMENT SYSTEM 
-- BY DAKSH KUMAR NAHAR 
--    AARUSHI JAIN 
--    SELINA VARSHNEY 
--    VAANI DANG 
-- BATCH : 2CO18

CREATE TABLE DONOR_INFO(
    first_name VARCHAR(30),
    last_name VARCHAR(30),
	DONOR_ID INT PRIMARY KEY,
    BRANCH_ID INT,
    DOB DATE,
    GENDER VARCHAR(2),
    Phone_no NUMBER(10) UNIQUE,
    Past_medical_disease VARCHAR(50)
);

INSERT INTO DONOR_INFO (first_name,last_name,DONOR_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Akshay','Chopra',1,101,'14-aug-01','M',9792394960,'None');
INSERT INTO DONOR_INFO (first_name,last_name,DONOR_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Kareena','Kumar',2,102,'1-nov-93','F',9091086201,'None');
INSERT INTO DONOR_INFO (first_name,last_name,DONOR_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Priyanka','Singh',3,102,'19-jul-90','F',9873181345,'Diabetes');
INSERT INTO DONOR_INFO (first_name,last_name,DONOR_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Kartik','Oberoi',4,103,'15-feb-84','M',9129091552,'High Cholestorol');
INSERT INTO DONOR_INFO (first_name,last_name,DONOR_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Amir','Ansari',5,104,'5-dec-02','M',9044752234,'None');

Select * from DONOR_INFO;

Select first_name,last_name,DONOR_ID,BRANCH_ID,DOB,
to_char(sysdate,'YYYY') - to_char(DOB,'YYYY') AS AGE,GENDER,Phone_no,Past_medical_disease from DONOR_INFO;

Select CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION FROM user_constraints WHERE table_name = 'DONOR_INFO';

-- CREATING THE PATIENT_INFO TABLE

CREATE TABLE PATIENT_INFO(
    first_name VARCHAR(30),
    last_name VARCHAR(30),
	PATIENT_ID INT PRIMARY KEY,
    BRANCH_ID INT,
    DOB DATE,
    GENDER VARCHAR(2),
    Phone_no NUMBER(10) UNIQUE,
    Past_medical_disease VARCHAR(50)
);

INSERT INTO PATIENT_INFO (first_name,last_name,PATIENT_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Riya' ,'Dixit',1,101,'14-aug-03','F',9899949570,'None');
INSERT INTO PATIENT_INFO (first_name,last_name,PATIENT_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Harsh','Mahajan',2,102,'21-jun-98','M',9811686215,'Diabetes');
INSERT INTO PATIENT_INFO (first_name,last_name,PATIENT_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Shekhar','Gupta',3,102,'12-may-91','M',9873181345,'High BP');
INSERT INTO PATIENT_INFO (first_name,last_name,PATIENT_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Jiya','Kapoor',4,103,'16-sep-96','F',9999821682,'None');
INSERT INTO PATIENT_INFO (first_name,last_name,PATIENT_ID,BRANCH_ID,DOB,GENDER,Phone_no,Past_medical_disease) 
VALUES ('Sheena','Bajaj',5,104,'18-jul-02','F',9654743234,'None');

Select * from PATIENT_INFO;

Select CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION FROM user_constraints WHERE table_name = 'PATIENT_INFO';

-- CREATING THE INVENTORY TABLE

CREATE TABLE INVENTORY(
    BLOOD_TYPE VARCHAR(10) UNIQUE,
    AVAILABLE INT
);

INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('A+',15);
INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('A-',10);
INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('B+',20);
INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('B-',15);
INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('O+',20);
INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('O-',7);
INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('AB+',10);
INSERT INTO INVENTORY(BLOOD_TYPE,AVAILABLE) VALUES ('AB-',5);

SELECT * FROM INVENTORY;

Select CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION FROM user_constraints WHERE table_name = 'INVENTORY';

-- CREATING THE DONOR_BLOOD TABLE

CREATE TABLE DONOR_BLOOD(
    DONOR_ID INT PRIMARY KEY,
    BLOOD_TYPE VARCHAR(10),
    UNITS_L INT NOT NULL,
    FOREIGN KEY(DONOR_ID) REFERENCES DONOR_INFO(DONOR_ID)
);

-- USING A TRIGGER

CREATE OR REPLACE TRIGGER UPDATE_INVENTORY
AFTER INSERT OR UPDATE ON DONOR_BLOOD
FOR EACH ROW
BEGIN
  UPDATE INVENTORY
  SET AVAILABLE = AVAILABLE + :NEW.UNITS_L
  WHERE BLOOD_TYPE = :NEW.BLOOD_TYPE;
END;

INSERT INTO DONOR_BLOOD (DONOR_ID,BLOOD_TYPE,UNITS_L) VALUES (1,'O+',2);
INSERT INTO DONOR_BLOOD (DONOR_ID,BLOOD_TYPE,UNITS_L) VALUES (2,'B+',2);
INSERT INTO DONOR_BLOOD (DONOR_ID,BLOOD_TYPE,UNITS_L) VALUES (3,'O-',1);
INSERT INTO DONOR_BLOOD (DONOR_ID,BLOOD_TYPE,UNITS_L) VALUES (4,'A+',1);
INSERT INTO DONOR_BLOOD (DONOR_ID,BLOOD_TYPE,UNITS_L) VALUES (5,'AB-',2);

SELECT * FROM INVENTORY;

-- DISPLAYING THE DONOR_BLOOD TABLE

select * from DONOR_BLOOD;

Select CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION FROM user_constraints WHERE table_name = 'DONOR_BLOOD';

-- CREATING PATIENTS_BLOOD TABLE

CREATE TABLE PATIENT_BLOOD(
    PATIENT_ID INT PRIMARY KEY,
    BLOOD_TYPE VARCHAR(10),
    UNITS_L INT NOT NULL,
    FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT_INFO(PATIENT_ID)
);

INSERT INTO PATIENT_BLOOD (PATIENT_ID,BLOOD_TYPE,UNITS_L) VALUES (1,'O+',7);
INSERT INTO PATIENT_BLOOD (PATIENT_ID,BLOOD_TYPE,UNITS_L) VALUES (2,'O-',9);
INSERT INTO PATIENT_BLOOD (PATIENT_ID,BLOOD_TYPE,UNITS_L) VALUES (3,'A+',11);
INSERT INTO PATIENT_BLOOD (PATIENT_ID,BLOOD_TYPE,UNITS_L) VALUES (4,'B-',7);
INSERT INTO PATIENT_BLOOD (PATIENT_ID,BLOOD_TYPE,UNITS_L) VALUES (5,'AB-',3);

select * from PATIENT_BLOOD;

Select CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION 
FROM user_constraints WHERE table_name = 'PATIENT_BLOOD';

-- USING CURSOR

DECLARE
  CURSOR c_patient_blood IS
    SELECT pb.PATIENT_ID, pb.BLOOD_TYPE, pb.UNITS_L, inv.AVAILABLE
    FROM PATIENT_BLOOD pb
    INNER JOIN INVENTORY inv ON pb.BLOOD_TYPE = inv.BLOOD_TYPE;
BEGIN
  FOR patient_rec IN c_patient_blood LOOP
    IF patient_rec.UNITS_L <= patient_rec.AVAILABLE THEN
      DBMS_OUTPUT.PUT_LINE
    ('Patient with ID ' || patient_rec.PATIENT_ID || ' can receive blood type ' || patient_rec.BLOOD_TYPE);
    ELSE
      DBMS_OUTPUT.PUT_LINE
    ('Patient with ID ' || patient_rec.PATIENT_ID || ' cannot receive blood type ' || patient_rec.BLOOD_TYPE || ' due to insufficient units');
    END IF;
  END LOOP;
END;

-- INVENTORY UPDATE AFTER PREVIOUS DONATION:

SELECT * FROM INVENTORY;

-- RUNNING A QUERY TO UPDATE INVENTORY AS PER PATIENT'S NEED

UPDATE INVENTORY 
SET AVAILABLE = AVAILABLE - (SELECT UNITS_L FROM PATIENT_BLOOD WHERE BLOOD_TYPE = INVENTORY.BLOOD_TYPE)
WHERE BLOOD_TYPE IN (SELECT BLOOD_TYPE FROM PATIENT_BLOOD);

UPDATE INVENTORY 
SET AVAILABLE = GREATEST(0, AVAILABLE)
WHERE AVAILABLE < 0;

-- AFTER DONATING TO PATIENT INVENTORY:

SELECT * FROM INVENTORY;

-- CREATING TABLE BRANCH

create table branch(
    BRANCH_ID int UNIQUE,
    CITY VARCHAR(20)
);

insert into branch values(101,'Patiala');
insert into branch values(102,'Patiala');
insert into branch values(103,'Chandigarh');
insert into branch values(104,'Mohali');
insert into branch values(105,'Ambala');

select * from branch;

Select CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION 
FROM user_constraints WHERE table_name = 'BRANCH';

-- EXCEPTION HANDLING
DECLARE
  branch_city VARCHAR(20);
BEGIN
  SELECT CITY INTO branch_city FROM branch WHERE BRANCH_ID = 106;
  DBMS_OUTPUT.PUT_LINE('The branch city is ' || branch_city);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No branch found with ID 106');
END;

